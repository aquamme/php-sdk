<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dapr/proto/common/v1/common.proto

namespace Dapr\Proto\Common\V1\HTTPExtension;

use UnexpectedValueException;

/**
 * Type of HTTP 1.1 Methods
 * RFC 7231: https://tools.ietf.org/html/rfc7231#page-24
 *
 * Protobuf type <code>dapr.proto.common.v1.HTTPExtension.Verb</code>
 */
class Verb
{
    /**
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * Generated from protobuf enum <code>GET = 1;</code>
     */
    const GET = 1;
    /**
     * Generated from protobuf enum <code>HEAD = 2;</code>
     */
    const HEAD = 2;
    /**
     * Generated from protobuf enum <code>POST = 3;</code>
     */
    const POST = 3;
    /**
     * Generated from protobuf enum <code>PUT = 4;</code>
     */
    const PUT = 4;
    /**
     * Generated from protobuf enum <code>DELETE = 5;</code>
     */
    const DELETE = 5;
    /**
     * Generated from protobuf enum <code>CONNECT = 6;</code>
     */
    const CONNECT = 6;
    /**
     * Generated from protobuf enum <code>OPTIONS = 7;</code>
     */
    const OPTIONS = 7;
    /**
     * Generated from protobuf enum <code>TRACE = 8;</code>
     */
    const TRACE = 8;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::GET => 'GET',
        self::HEAD => 'HEAD',
        self::POST => 'POST',
        self::PUT => 'PUT',
        self::DELETE => 'DELETE',
        self::CONNECT => 'CONNECT',
        self::OPTIONS => 'OPTIONS',
        self::TRACE => 'TRACE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Verb::class, \Dapr\Proto\Common\V1\HTTPExtension_Verb::class);

