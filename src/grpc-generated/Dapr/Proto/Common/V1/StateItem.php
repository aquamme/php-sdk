<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dapr/proto/common/v1/common.proto

namespace Dapr\Proto\Common\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * StateItem represents state key, value, and additional options to save state.
 *
 * Generated from protobuf message <code>dapr.proto.common.v1.StateItem</code>
 */
class StateItem extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The state key
     *
     * Generated from protobuf field <code>string key = 1;</code>
     */
    protected $key = '';
    /**
     * Required. The state data for key
     *
     * Generated from protobuf field <code>bytes value = 2;</code>
     */
    protected $value = '';
    /**
     * The entity tag which represents the specific version of data.
     * The exact ETag format is defined by the corresponding data store.
     *
     * Generated from protobuf field <code>.dapr.proto.common.v1.Etag etag = 3;</code>
     */
    protected $etag = null;
    /**
     * The metadata which will be passed to state store component.
     *
     * Generated from protobuf field <code>map<string, string> metadata = 4;</code>
     */
    private $metadata;
    /**
     * Options for concurrency and consistency to save the state.
     *
     * Generated from protobuf field <code>.dapr.proto.common.v1.StateOptions options = 5;</code>
     */
    protected $options = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $key
     *           Required. The state key
     *     @type string $value
     *           Required. The state data for key
     *     @type \Dapr\Proto\Common\V1\Etag $etag
     *           The entity tag which represents the specific version of data.
     *           The exact ETag format is defined by the corresponding data store.
     *     @type array|\Google\Protobuf\Internal\MapField $metadata
     *           The metadata which will be passed to state store component.
     *     @type \Dapr\Proto\Common\V1\StateOptions $options
     *           Options for concurrency and consistency to save the state.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Dapr\Proto\Common\V1\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The state key
     *
     * Generated from protobuf field <code>string key = 1;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * Required. The state key
     *
     * Generated from protobuf field <code>string key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * Required. The state data for key
     *
     * Generated from protobuf field <code>bytes value = 2;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Required. The state data for key
     *
     * Generated from protobuf field <code>bytes value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->value = $var;

        return $this;
    }

    /**
     * The entity tag which represents the specific version of data.
     * The exact ETag format is defined by the corresponding data store.
     *
     * Generated from protobuf field <code>.dapr.proto.common.v1.Etag etag = 3;</code>
     * @return \Dapr\Proto\Common\V1\Etag
     */
    public function getEtag()
    {
        return isset($this->etag) ? $this->etag : null;
    }

    public function hasEtag()
    {
        return isset($this->etag);
    }

    public function clearEtag()
    {
        unset($this->etag);
    }

    /**
     * The entity tag which represents the specific version of data.
     * The exact ETag format is defined by the corresponding data store.
     *
     * Generated from protobuf field <code>.dapr.proto.common.v1.Etag etag = 3;</code>
     * @param \Dapr\Proto\Common\V1\Etag $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkMessage($var, \Dapr\Proto\Common\V1\Etag::class);
        $this->etag = $var;

        return $this;
    }

    /**
     * The metadata which will be passed to state store component.
     *
     * Generated from protobuf field <code>map<string, string> metadata = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * The metadata which will be passed to state store component.
     *
     * Generated from protobuf field <code>map<string, string> metadata = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metadata = $arr;

        return $this;
    }

    /**
     * Options for concurrency and consistency to save the state.
     *
     * Generated from protobuf field <code>.dapr.proto.common.v1.StateOptions options = 5;</code>
     * @return \Dapr\Proto\Common\V1\StateOptions
     */
    public function getOptions()
    {
        return isset($this->options) ? $this->options : null;
    }

    public function hasOptions()
    {
        return isset($this->options);
    }

    public function clearOptions()
    {
        unset($this->options);
    }

    /**
     * Options for concurrency and consistency to save the state.
     *
     * Generated from protobuf field <code>.dapr.proto.common.v1.StateOptions options = 5;</code>
     * @param \Dapr\Proto\Common\V1\StateOptions $var
     * @return $this
     */
    public function setOptions($var)
    {
        GPBUtil::checkMessage($var, \Dapr\Proto\Common\V1\StateOptions::class);
        $this->options = $var;

        return $this;
    }

}

